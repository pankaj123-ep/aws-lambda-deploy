name: lambda-deployment
on:
    pull_request:
        branches: [main]
    push: 
      branches: [main]
    workflow_dispatch:
jobs:
    Build:
        runs-on: [ubuntu-latest]
        steps:
            - name: checkout code 8
              uses: actions/checkout@v3
            - name: connect aws 
              uses: aws-actions/configure-aws-credentials@v2
              with :
                aws-region: us-east-2
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            - name: Upload-Artificats
              uses: actions/upload-artifact@v3
              with:
                name: lambda-code
                path: sample-lambda.py
                
    UAT-DEPLOYMENT:
          runs-on: [ubuntu-latest]
          environment: 
              name: uat
          needs: Build
          if: github.event_name == 'pull_request'
          steps:

                    - name: connect aws 
                      uses: aws-actions/configure-aws-credentials@v2
                      with :
                        aws-region: us-east-2
                        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    - name : download artifacts
                      uses: actions/download-artifact@v3
                      with:
                        name: lambda-code
                    - name: aws cli execution for lambda
                      run: |
                        echo "${{vars.environment}}"
                        zip sample-lambda.zip sample-lambda.py
                        aws lambda update-function-code --function-name sample-lambda-${{vars.ENVIRONMENT}} --zip-file fileb://sample-lambda.zip --handler sample-lambda.index_handler --role arn:aws:iam::064648406443:role/temp-role-lambda
                        


                      
    deploy-staging:
        runs-on: [ubuntu-latest]
        needs: Build
        name: Staging Deployment
        if: github.event.ref == 'refs/heads/main'
        environment: 
          name: Staging
        steps:
            - name : download artifacts
              uses: actions/download-artifact@v3
              with:
                name: lambda-code
            - name: connect aws 
              uses: aws-actions/configure-aws-credentials@v2
              with :
                aws-region: us-east-2
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            - name: aws cli execution
              run: |
                echo "${{vars.environment}}"
                zip sample-lambda.zip sample-lambda.py
                aws lambda update-function-code --function-name sample-lambda-${{vars.ENVIRONMENT}} --zip-file fileb://sample-lambda.zip --handler sample-lambda.index_handler --role arn:aws:iam::064648406443:role/temp-role-lambda
    deploy-prod:
        runs-on: [ubuntu-latest]
        needs: deploy-staging
        name: Prod Deployment
        environment: 
          name: Prod
        steps:
            - name: checkout code 5
              uses: actions/checkout@v3
            - name: connect aws 
              uses: aws-actions/configure-aws-credentials@v2
              with :
                aws-region: us-east-2
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            - name: aws cli execution
              run: |
               aws s3 ls

           


